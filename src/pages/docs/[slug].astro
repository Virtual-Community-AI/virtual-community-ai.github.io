---
import Layout from '../../layouts/Layout.astro';
import Navigation from '../../components/Navigation.astro';
import DocsSidebar from '../../components/DocsSidebar.astro';
import Footer from '../../components/Footer.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import '../../styles/docs.css';

export async function getStaticPaths() {
  const docs = await getCollection('docs');
  return docs.map((doc) => ({
    params: { slug: doc.slug },
    props: { doc },
  }));
}

interface Props {
  doc: CollectionEntry<'docs'>;
}

const { doc } = Astro.props;
const { Content } = await doc.render();

// Get all docs for navigation
const allDocs = await getCollection('docs');
const sortedDocs = allDocs.sort((a, b) => {
  const categoryOrder = ['getting-started', 'guides', 'tutorials', 'api', 'research'];
  const aCategoryIndex = categoryOrder.indexOf(a.data.category);
  const bCategoryIndex = categoryOrder.indexOf(b.data.category);
  
  if (aCategoryIndex !== bCategoryIndex) {
    return aCategoryIndex - bCategoryIndex;
  }
  
  const aOrder = a.data.order || 999;
  const bOrder = b.data.order || 999;
  return aOrder - bOrder;
});

// Prepare sidebar data
const sidebarItems = allDocs.map(docItem => ({
  title: docItem.data.title,
  link: `/docs/${docItem.slug}`,
  category: docItem.data.category,
  order: docItem.data.order || 999
}));

// Find current doc index for navigation
const currentIndex = sortedDocs.findIndex(d => d.slug === doc.slug);
const prevDoc = currentIndex > 0 ? sortedDocs[currentIndex - 1] : null;
const nextDoc = currentIndex < sortedDocs.length - 1 ? sortedDocs[currentIndex + 1] : null;

const categoryDisplayNames = {
  'getting-started': 'Getting Started',
  'guides': 'Guides',
  'tutorials': 'Tutorials',
  'api': 'API Reference',
  'research': 'Research Papers'
};
---

<Layout title={`${doc.data.title} - Virtual Community Documentation`}>
  <Navigation 
    sidebarItems={sidebarItems} 
    currentSlug={doc.slug}    isDocsPage={true}  />

<main class="min-h-screen bg-white pt-16">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <div class="grid lg:grid-cols-4 gap-8">
        <!-- Sidebar -->
        <DocsSidebar items={sidebarItems} currentSlug={doc.slug} />

        <!-- Main Content -->
        <div class="lg:col-span-3 col-span-full px-4 lg:px-0">

<!-- Article Header -->          <header class="mb-8 pb-8 border-b border-slate-200">
            <h1 class="text-4xl md:text-5xl font-bold text-slate-900 mb-4">
              {doc.data.title}
            </h1>
            
            <p class="text-xl text-slate-600 leading-relaxed">
              {doc.data.description}
            </p>

            <div class="flex items-center justify-between mt-6 pt-6 border-t border-slate-200">
              <div class="text-sm text-slate-500">
                {doc.data.publishedDate && (
                  <span>Published: {new Date(doc.data.publishedDate).toLocaleDateString()}</span>
                )}
                {doc.data.lastModified && (
                  <span class="ml-4">Last updated: {new Date(doc.data.lastModified).toLocaleDateString()}</span>
                )}
              </div>
              
              {doc.data.author && (
                <div class="text-sm text-slate-700">
                  By {doc.data.author}
                </div>
              )}
            </div>
          </header><!-- Article Content -->
          <div class="prose prose-lg max-w-none docs-content">
            <Content />
          </div>          <!-- Navigation -->
          <nav class="mt-16 pt-8 border-t border-slate-200">
            <div class="grid md:grid-cols-2 gap-4">
              {prevDoc && (
                <a 
                  href={`/docs/${prevDoc.slug}`}
                  class="group bg-white border border-slate-200 rounded-lg p-6 hover:border-slate-300 hover:shadow-sm transition-all"
                >
                  <div class="flex items-center text-slate-500 text-sm mb-2">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                    </svg>
                    Previous
                  </div>
                  <div class="text-slate-900 font-medium group-hover:text-slate-700 transition-colors">
                    {prevDoc.data.title}
                  </div>
                </a>
              )}
              
              {nextDoc && (
                <a 
                  href={`/docs/${nextDoc.slug}`}
                  class="group bg-white border border-slate-200 rounded-lg p-6 hover:border-slate-300 hover:shadow-sm transition-all md:text-right"
                >
                  <div class="flex items-center justify-end text-slate-500 text-sm mb-2">
                    Next
                    <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                    </svg>
                  </div>
                  <div class="text-slate-900 font-medium group-hover:text-slate-700 transition-colors">
                    {nextDoc.data.title}
                  </div>
                </a>
              )}
            </div>
          </nav>
        </arti>
      </div>
    </div>
  </main>
  <Footer />
</Layout>
